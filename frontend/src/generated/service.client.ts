// @generated by protobuf-ts 2.10.0
// @generated from protobuf file "service.proto" (package "service", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Echo } from "./service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Message } from "./service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service service.Echo
 */
export interface IEchoClient {
    /**
     * @generated from protobuf rpc: Ping(service.Message) returns (service.Message);
     */
    ping(input: Message, options?: RpcOptions): UnaryCall<Message, Message>;
}
/**
 * @generated from protobuf service service.Echo
 */
export class EchoClient implements IEchoClient, ServiceInfo {
    typeName = Echo.typeName;
    methods = Echo.methods;
    options = Echo.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Ping(service.Message) returns (service.Message);
     */
    ping(input: Message, options?: RpcOptions): UnaryCall<Message, Message> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Message, Message>("unary", this._transport, method, opt, input);
    }
}
